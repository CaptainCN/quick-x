
$#include "shaders/CCShaderCache.h"

enum
{
    kCCShader_PositionTextureColor,
    kCCShader_PositionTextureGray,
    kCCShader_PositionTextureColorAlphaTest,
    kCCShader_PositionColor,
    kCCShader_PositionTexture,
    kCCShader_PositionTexture_uColor,
    kCCShader_PositionTextureA8Color,
    kCCShader_Position_uColor,
    kCCShader_PositionLengthTextureColor,
};

class CCGLProgram : public CCObject
{
public:
    unsigned getUniformLocationForName @ get(const char* name);
    void setUniformLocationWith1i @ set1i(unsigned location, unsigned i1);
    void setUniformLocationWith2i @ set2i(unsigned location, unsigned i1, unsigned i2);
    void setUniformLocationWith3i @ set3i(unsigned location, unsigned i1, unsigned i2, unsigned i3);
    void setUniformLocationWith4i @ set4i(unsigned location, unsigned i1, unsigned i2, unsigned i3, unsigned i4);

    void setUniformLocationWith1f @ set1f(unsigned location, float f1);
    void setUniformLocationWith2f @ set2f(unsigned location, float f1, float f2);
    void setUniformLocationWith3f @ set3f(unsigned location, float f1, float f2, float f3);
    void setUniformLocationWith4f @ set4f(unsigned location, float f1, float f2, float f3, float f4);
};

class CCShaderCache
{
public:
    static CCShaderCache* sharedShaderCache();
    CCGLProgram* programForKey(int key);
    CCGLProgram* addShader(const char* v, const char* f);
};
