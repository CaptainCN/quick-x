
$#include "shaders/CCShaderCache.h"

enum
{
    kCCShader_PositionTextureColor,
    kCCShader_PositionTextureGray,
    kCCShader_PositionTextureColorAlphaTest,
    kCCShader_PositionColor,
    kCCShader_PositionTexture,
    kCCShader_PositionTexture_uColor,
    kCCShader_PositionTextureA8Color,
    kCCShader_Position_uColor,
    kCCShader_PositionLengthTextureColor,
};

class MaterialParam
{
public:

    enum
    {
        INT1,
        INT2,
        INT3,
        INT4,
        
        FLOAT1,
        FLOAT2,
        FLOAT3,
        FLOAT4,
        
        MAT,
    } type;

    void set1i(int v1);
    void set2i(int v1, int v2);
    void set3i(int v1, int v2, int v3);
    void set4i(int v1, int v2, int v3, int v4);
    void set1f(float v1);
    void set2f(float v1, float v2);
    void set3f(float v1, float v2, float v3);
    void set4f(float v1, float v2, float v3, float v4);
};

class Material : public CCObject
{
public:
    MaterialParam* getParam(const char* name);

    void set1i(const char* name, int v1);
    void set2i(const char* name, int v1, int v2);
    void set3i(const char* name, int v1, int v2, int v3);
    void set4i(const char* name, int v1, int v2, int v3, int v4);

    void set1f(const char* name, float v1);
    void set2f(const char* name, float v1, float v2);
    void set3f(const char* name, float v1, float v2, float v3);
    void set4f(const char* name, float v1, float v2, float v3, float v4);
};
class CCShaderCache
{
public:
    static CCShaderCache* sharedShaderCache();
    Material* addMaterialFromShaderSource(const char* v, const char* f);
    Material* getMaterial(int key);
};
