
$#include "actions/CCActionGrid3D.h"

class CCWaves3D : public CCGrid3DAction
{
    /** creates an action with duration, grid size, waves and amplitude */
    static CCWaves3D* create(float duration, CCSize gridSize, unsigned int waves, float amplitude);
};

/** @brief CCFlipX3D action */
class CCFlipX3D : public CCGrid3DAction
{
    /** creates the action with duration */
    static CCFlipX3D* create(float duration);
};

/** @brief CCFlipY3D action */
class CCFlipY3D : public CCFlipX3D
{
    /** creates the action with duration */
    static CCFlipY3D* create(float duration);
};

/** @brief CCLens3D action */
class CCLens3D : public CCGrid3DAction
{
    void setPosition(float x, float y);
    void setPosition(const Vec2& position);
    /** creates the action with center position, radius, a grid size and duration */
    static CCLens3D* create(float duration, CCSize gridSize, Vec2 position, float radius);
};

/** @brief CCRipple3D action */
class CCRipple3D : public CCGrid3DAction
{
    void setPosition(float x, float y);
    void setPosition(const Vec2& position);
    /** creates the action with radius, number of waves, amplitude, a grid size and duration */
    static CCRipple3D* create(float duration, CCSize gridSize, Vec2 position, float radius, unsigned int waves, float amplitude);
};

/** @brief CCShaky3D action */
class CCShaky3D : public CCGrid3DAction
{
    /** creates the action with a range, shake Z vertices, a grid and duration */
    static CCShaky3D* create(float duration, CCSize gridSize, int range, bool shakeZ);
};

/** @brief CCLiquid action */
class CCLiquid : public CCGrid3DAction
{
    /** creates the action with amplitude, a grid and duration */
    static CCLiquid* create(float duration, CCSize gridSize, unsigned int waves, float amplitude);
};

/** @brief CCWaves action */
class CCWaves : public CCGrid3DAction
{
    /** initializes the action with amplitude, horizontal sin, vertical sin, a grid and duration */
    static CCWaves* create(float duration, CCSize gridSize, unsigned int waves, float amplitude, bool horizontal, bool vertical);
};

/** @brief CCTwirl action */
class CCTwirl : public CCGrid3DAction
{
    void setPosition(float x, float y);
    void setPosition(const Vec2& position);

    /** creates the action with center position, number of twirls, amplitude, a grid size and duration */
    static CCTwirl* create(float duration, CCSize gridSize, Vec2 position, unsigned int twirls, float amplitude);
};

// end of actions group
/// @}
