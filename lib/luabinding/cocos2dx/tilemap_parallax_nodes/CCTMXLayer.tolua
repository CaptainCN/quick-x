
$#include "tilemap/CCTMXLayer.h"

class CCTMXLayer : public CCSpriteBatchNode
{
    CCTMXLayer();
    ~CCTMXLayer();

    /** creates a CCTMXLayer with an tileset info, a layer info and a map info */
    static CCTMXLayer * create(CCTMXTilesetInfo *tilesetInfo, CCTMXLayerInfo *layerInfo, CCTMXMapInfo *mapInfo);

    /** initializes a CCTMXLayer with a tileset info, a layer info and a map info */
    bool initWithTilesetInfo(CCTMXTilesetInfo *tilesetInfo, CCTMXLayerInfo *layerInfo, CCTMXMapInfo *mapInfo);

    /** size of the layer in tiles */
    CCSize getLayerSize();
    /** size of the map's tile (could be different from the tile's size) */
    CCSize getMapTileSize();
    /** Tileset information for the layer */
    CCTMXTilesetInfo *getTileSet();
    /** Layer orientation, which is the same as the map orientation */
    unsigned int getLayerOrientation();
    /** properties from the layer. They can be added using Tiled */
    CCDictionary *getProperties();


    /** dealloc the map that contains the tile position from memory.
    Unless you want to know at runtime the tiles positions, you can safely call this method.
    If you are going to call layer->tileGIDAt() then, don't release the map
    */
    void releaseMap();

    /** returns the tile (CCSprite) at a given a tile coordinate.
    The returned CCSprite will be already added to the CCTMXLayer. Don't add it again.
    The CCSprite can be treated like any other CCSprite: rotated, scaled, translated, opacity, color, etc.
    You can remove either by calling:
    - layer->removeChild(sprite, cleanup);
    - or layer->removeTileAt(ccp(x,y));
    */
    CCSprite* tileAt(CCPoint tileCoordinate);

    /** returns the tile gid at a given tile coordinate.
    if it returns 0, it means that the tile is empty.
    This method requires the the tile map has not been previously released (eg. don't call layer->releaseMap())
    */
    unsigned int  tileGIDAt(CCPoint tileCoordinate);

    /** sets the tile gid (gid = tile global id) at a given tile coordinate.
    The Tile GID can be obtained by using the method "tileGIDAt" or by using the TMX editor -> Tileset Mgr +1.
    If a tile is already placed at that position, then it will be removed.
    */
    void setTileGID(unsigned int gid, CCPoint tileCoordinate);

    /** removes a tile at given tile coordinate */
    void removeTileAt(CCPoint tileCoordinate);

    /** returns the position in points of a given tile coordinate */
    CCPoint positionAt(CCPoint tileCoordinate);

    /** return the value for the specific property name */
    CCString *propertyNamed(const char *propertyName);

    const char* getLayerName();
};

// end of tilemap_parallax_nodes group
/// @}
