
$#include "sprite_nodes/CCAnimation.h"

class CCAnimationFrame : public CCObject
{
    /** CCSpriteFrameName to be used */
    CCSpriteFrame* getSpriteFrame();
    void setSpriteFrame(CCSpriteFrame* frame);

    /**  how many units of time the frame takes */
    float getDelayUnits();
    void setDelayUnits(float delay);
};

/** A CCAnimation object is used to perform animations on the CCSprite objects.

The CCAnimation object contains CCAnimationFrame objects, and a possible delay between the frames.
You can animate a CCAnimation object by using the CCAnimate action. Example:

[sprite runAction:[CCAnimate actionWithAnimation:animation]];

*/
class CCAnimation : public CCObject
{
    /* Creates an animation with an array of CCAnimationFrame, the delay per units in seconds and and how many times it should be executed.
     @since v2.0
     */
    static CCAnimation* create(CCArray *arrayOfAnimationFrameNames, float delayPerUnit, unsigned int loops);
    static CCAnimation* create(CCArray *arrayOfAnimationFrameNames, float delayPerUnit);
    /** Creates an animation
    @since v0.99.5
    */
    static CCAnimation* create(void);
    /* Creates an animation with an array of CCSpriteFrame and a delay between frames in seconds.
     The frames will be added with one "delay unit".
     @since v0.99.5
    */
    static CCAnimation* createWithSpriteFrames(CCArray* arrayOfSpriteFrameNames, float delay = 0.0f);

    /** Adds a CCSpriteFrame to a CCAnimation.
     The frame will be added with one "delay unit".
    */
    void addSpriteFrame(CCSpriteFrame *pFrame);

    /** Adds a frame with an image filename. Internally it will create a CCSpriteFrame and it will add it.
     The frame will be added with one "delay unit".
     Added to facilitate the migration from v0.8 to v0.9.
     */
    void addSpriteFrameWithFileName(const char *pszFileName);

    /** Adds a frame with a texture and a rect. Internally it will create a CCSpriteFrame and it will add it.
     The frame will be added with one "delay unit".
     Added to facilitate the migration from v0.8 to v0.9.
     */
    void addSpriteFrameWithTexture(CCTexture2D* pobTexture, CCRect rect);


    /** total Delay units of the CCAnimation. */
    float getTotalDelayUnits();

    /** Delay in seconds of the "delay unit" */
    float getDelayPerUnit();
    void setDelayPerUnit(float delay);

    /** duration in seconds of the whole animation. It is the result of totalDelayUnits * delayPerUnit */
    float getDuration();

    /** array of CCAnimationFrames */
    CCArray* getFrames();

    /** whether or not it shall restore the original frame when the animation finishes */
    bool getRestoreOriginalFrame();
    void setRestoreOriginalFrame(bool v);

    /** how many times the animation is going to loop. 0 means animation is not animated. 1, animation is executed one time, ... */
    unsigned int getLoops();
    void setLoops(unsigned int loops);

    CCAnimation *copy(void);
};

// end of sprite_nodes group
/// @}
