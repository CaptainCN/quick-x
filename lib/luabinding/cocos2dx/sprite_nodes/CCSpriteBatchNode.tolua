
$#include "nodes/CCSpriteBatchNode.h"

class CCSpriteBatchNode : public CCNode
{
    /** creates a CCSpriteBatchNode with a texture2d and capacity of children.
    The capacity will be increased in 33% in runtime if it run out of space.
    */
    static CCSpriteBatchNode* createWithTexture(CCTexture2D* tex, unsigned int capacity);
    static CCSpriteBatchNode* createWithTexture(CCTexture2D* tex);

    /** creates a CCSpriteBatchNode with a file image (.png, .jpeg, .pvr, etc) and capacity of children.
    The capacity will be increased in 33% in runtime if it run out of space.
    The file will be loaded using the TextureMgr.
    */
    static CCSpriteBatchNode* create(const char* fileImage, unsigned int capacity);
    static CCSpriteBatchNode* create(const char* fileImage);

    /** removes a child given a certain index. It will also cleanup the running actions depending on the cleanup parameter.
    @warning Removing a child from a CCSpriteBatchNode is very slow
    */
    void removeChildAtIndex(unsigned int index, bool doCleanup);

    void insertChild(CCSprite *child, unsigned int index);
    void appendChild(CCSprite* sprite);
    void removeSpriteFromAtlas(CCSprite *sprite);

    unsigned int rebuildIndexInOrder(CCSprite *parent, unsigned int index);
    unsigned int highestAtlasIndexInChild(CCSprite *sprite);
    unsigned int lowestAtlasIndexInChild(CCSprite *sprite);
    unsigned int atlasIndexForChild(CCSprite *sprite, int z);

    CCTexture2D* getTexture(void);
    void setTexture(CCTexture2D *texture);
    void setBlendFunc(ccBlendFunc blendFunc);
    ccBlendFunc getBlendFunc(void);
};

// end of sprite_nodes group
/// @}
