$#include "particle/CCParticleSystemQuad.h"

class CCParticleSystemQuad : public CCParticleSystem
{
    CCParticleSystemQuad(void);
    ~CCParticleSystemQuad(void);

    /** initializes the indices for the vertices*/
    void initIndices();

    /** initializes the texture with a rectangle measured Points */
    void initTexCoordsWithRect(CCRect rect);

    /** Sets a new CCSpriteFrame as particle.
    WARNING: this method is experimental. Use setTexture:withRect instead.
    @since v0.99.4
    */
    void setDisplayFrame(CCSpriteFrame *spriteFrame);

    /** Sets a new texture with a rect. The rect is in Points.
    @since v0.99.4
    */
    void setTextureWithRect(CCTexture2D *texture, const CCRect& rect);
    // super methods
    bool initWithTotalParticles(unsigned int numberOfParticles);
    void setTexture(CCTexture2D* texture);
    void updateQuadWithParticle(tCCParticle* particle, const CCPoint& newPosition);
    void setBatchNode(CCParticleBatchNode* batchNode);
    void setTotalParticles(unsigned int tp);

    /** creates an initializes a CCParticleSystemQuad from a plist file.
    This plist files can be created manually or with Particle Designer:
    */
    static CCParticleSystemQuad * create(const char *plistFile);
    static CCParticleSystemQuad * create();
    static CCParticleSystemQuad * createWithTotalParticles(unsigned int numberOfParticles);

    /** Sets a new CCSpriteFrame as particle.
    WARNING: this method is experimental. Use setTexture:withRect instead.
    @since v0.99.4
    */
    void setDisplayFrame(CCSpriteFrame *spriteFrame);

    /** Sets a new texture with a rect. The rect is in Points.
    @since v0.99.4
    */
    void setTextureWithRect(CCTexture2D *texture, CCRect rect);
};

// end of particle_nodes group
/// @}
