$#include "label_nodes/CCLabelBMFont.h"


enum {
    kCCLabelAutomaticWidth = -1,
};

class CCLabelBMFont : public CCSpriteBatchNode
{
    CCLabelBMFont();
    ~CCLabelBMFont();

    bool init();
    /** init a bitmap font atlas with an initial string and the FNT file */
    bool initWithString(const char *str, const char *fntFile, float width = kCCLabelAutomaticWidth, CCTextAlignment alignment = kCCTextAlignmentLeft, CCPoint imageOffset = ccp(0, 0));

    /** creates a bitmap font atlas with an initial string and the FNT file */
    static CCLabelBMFont * create(const char *text, const char *fntFile, float width, CCTextAlignment alignment, CCPoint imageOffset);
    static CCLabelBMFont * create(const char *text, const char *fntFile, float width, CCTextAlignment alignment);
    static CCLabelBMFont * create(const char *text, const char *fntFile, float width);
    static CCLabelBMFont * create(const char *text, const char *fntFile);
    /** Creates an label.
     */
    static CCLabelBMFont * create();

    // super method
    void setString(const char *newString, bool needUpdateLabel);
    void setString(const char *newString);
    const char* getString(void);
    void setCString(const char *label);
    void updateLabel();

    void setAlignment(CCTextAlignment alignment);
    void setWidth(float width);
    void setLineBreakWithoutSpace(bool breakWithoutSpace);

    // CCRGBAProtocol
    bool isOpacityModifyRGB();
    void setOpacityModifyRGB(bool isOpacityModifyRGB); GLubyte getOpacity();
    GLubyte getDisplayedOpacity();
    void setOpacity(GLubyte opacity);
    void updateDisplayedOpacity(GLubyte parentOpacity);
    bool isCascadeOpacityEnabled();
    void setCascadeOpacityEnabled(bool cascadeOpacityEnabled);
    ccColor3B getColor(void);
    ccColor3B getDisplayedColor();
    void setColor(ccColor3B color);
    void updateDisplayedColor(ccColor3B parentColor);
    bool isCascadeColorEnabled();
    void setCascadeColorEnabled(bool cascadeColorEnabled);

    void setFntFile(const char* fntFile);
    const char* getFntFile();
};

// end of GUI group
/// @}
/// @}
