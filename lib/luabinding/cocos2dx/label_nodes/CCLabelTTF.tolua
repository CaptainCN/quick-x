$#include "nodes/CCLabelTTF.h"

class CCLabelTTF : public CCSprite
{
    CCLabelTTF();
    ~CCLabelTTF();

    /** creates a CCLabel from a fontname, alignment, dimension in points and font size in points
     @since v2.0.1
     */
    static CCLabelTTF * create(const char *text, const char *fontName, float fontSize,
                               CCSize dimensions, CCTextAlignment hAlignment,
                               CCVerticalTextAlignment vAlignment);

    /** creates a CCLabelTTF from a fontname, horizontal alignment, dimension in points,  and font size in points.
     @since v2.0.1
     */
    static CCLabelTTF * create(const char *text, const char *fontName, float fontSize,
                               CCSize dimensions, CCTextAlignment hAlignment);

    /** creates a CCLabelTTF with a font name and font size in points
     @since v2.0.1
     */
    static CCLabelTTF * create(const char *text, const char *fontName, float fontSize);

    /** Creates an label.
     */
    static CCLabelTTF * create();

    /** initializes the CCLabelTTF with a font name, alignment, dimension and font size */
    bool initWithString(const char *text, const char *fontName, float fontSize,
                        const CCSize& dimensions, CCTextAlignment hAlignment,
                        CCVerticalTextAlignment vAlignment);

    /** initializes the CCLabelTTF with a font name, alignment, dimension and font size */
    bool initWithString(const char *text, const char *fontName, float fontSize,
                        const CCSize& dimensions, CCTextAlignment hAlignment);

    /** initializes the CCLabelTTF with a font name and font size */
    bool initWithString(const char *text, const char *fontName, float fontSize);

    /** initializes the CCLabelTTF with a font name, alignment, dimension and font size */
    bool initWithStringAndTextDefinition(const char *text, ccFontDefinition &textDefinition);

    /** initializes the CCLabelTTF */
    bool init();

    /** set the text definition used by this label */
    void setTextDefinition(ccFontDefinition *theDefinition);

    /** get the text definition used by this label */
    ccFontDefinition * getTextDefinition();

    /** enable or disable shadow for the label */
    void enableShadow(CCSize shadowOffset, float shadowOpacity, float shadowBlur, bool mustUpdateTexture = true);

    /** disable shadow rendering */
    void disableShadow(bool mustUpdateTexture = true);

    /** enable or disable stroke */
    void enableStroke(ccColor3B strokeColor, float strokeSize, bool mustUpdateTexture = true);

    /** disable stroke */
    void disableStroke(bool mustUpdateTexture = true);

    /** set text tinting */
    void setFontFillColor(ccColor3B tintColor, bool mustUpdateTexture = true);

    /** changes the string to render
    * @warning Changing the string is as expensive as creating a new CCLabelTTF. To obtain better performance use CCLabelAtlas
    */
    void setString(const char *label);
    const char* getString(void);

    int getHorizontalAlignment();
    void setHorizontalAlignment(CCTextAlignment alignment);

    int getVerticalAlignment();
    void setVerticalAlignment(CCVerticalTextAlignment verticalAlignment);

    CCSize getDimensions();
    void setDimensions(CCSize dim);

    float getFontSize();
    void setFontSize(float fontSize);

    const char* getFontName();
    void setFontName(const char *fontName);
};

// end of GUI group
/// @}
/// @}
